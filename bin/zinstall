#!/bin/sh
#
# zinstall - Painless Zig installation
#
# TODO
# allow downloading "master" Ziglang (use https://zigbin.io/master/x86_64-linux.tar.xz ?)
#

usage() {
  cat <<EOF
Usage: $(basename "${0}") [option]

  -a, --arch     Specify architecture.
  -v, --version  Specify version.

  -V, --verbose  Output debug information.

  -h, --help     Display this help message and exit.
EOF
}

VERSION=0.13.0
ARCH=x86_64

download() {
  WGET=$(which wget)

  "${WGET}" https://ziglang.org/download/${VERSION}/zig-linux-${ARCH}-${VERSION}.tar.xz

  unset WGET
}

install() {
  TAR=$(which tar)
  MV=$(which mv)
  RM=$(which rm)

  "${TAR}" xvf zig-linux-${ARCH}-${VERSION}.tar.xz
  "${MV}" --verbose zig-linux-${ARCH}-${VERSION} /usr/local/zig
  "${RM}" --verbose zig-linux-${ARCH}-${VERSION}.tar.xz

  unset TAR
  unset MV
  unset RM
}

conftest() {
  grep -qxF 'export PATH=$PATH:/usr/local/zig' "$HOME/.profile" || \
  echo 'export PATH=$PATH:/usr/local/zig' >> "$HOME/.profile" && \
  export PATH=$PATH:/usr/local/zig

  zig help
  zig version
}

parse_params() {
  while true; do
    case "${1-}" in
      "-h"|"--help")
        usage
        exit 0
        ;;
      "-a"|"--architecture")
        ARCH="${2-x86_64}"
        shift
        ;;
      "-v"|"--version")
        VERSION="${2-0.13.0}"
        shift
        ;;
      "-V"|"--verbose")
        set -x
        ;;
      -?*)
        echo "$(basename "${0}"): Invalid option ${1}"
        echo "Try '$(basename "${0}") -h' for more information."
        exit 1
        ;;
      *)
        break
        ;;
    esac
    shift
  done

  return 0
}

main() {
  download
  install
  conftest
}

parse_params "$@"
main
